{"version":3,"file":"static/js/729.9ee5866f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.ts","components/ContactForm/ContactForm.tsx","components/Filter/Filter.styled.ts","components/Filter/Filter.tsx","components/FromAuthor/FromAuthor.styled.ts","components/FromAuthor/FromAuthor.tsx","Pages/ContactsPage/ContactsPage.styled.ts","Pages/ContactsPage/ContactsPage.tsx","components/InputGroup/InputGroup.styled.ts","components/InputGroup/InputGroup.tsx","redux/contacts/contactsSelectors.ts"],"sourcesContent":["import { Button, styled } from '@mui/material';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p=>p.theme.spacing(2)};\n  width: 245px;\n  padding: ${p=>p.theme.spacing(4)} ${p=>p.theme.spacing(3)};\n  margin: 0 auto;\n  border-radius: ${p=>p.theme.spacing(3)};\n  background-color: ${p=>p.theme.palette.background.default};\n`;\n\nexport const StyledButton = styled(Button)`\n  width: 100%;\n  border-color: ${p=>p.theme.palette.primary.main};\n  background-color: ${p=>p.theme.palette.primary.main};\n  color: ${p=>p.theme.palette.text.primary};\n  margin-top: ${p=>p.theme.spacing(3)};\n\n  :hover,\n  :focus {\n    font-weight: 600;\n    background-color: ${p=>p.theme.palette.secondary.main};\n    color: ${p=>p.theme.palette.common.white};\n  }\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from 'hooks/hooksConfig';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport InputGroup from 'components/InputGroup/InputGroup';\nimport {\n  StyledForm,\n  StyledButton,\n} from './ContactForm.styled';\n\nconst ContactForm: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameRegExp =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n  const phoneNumberRegExp =\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required('\"Name\" is a required field')\n      .matches(\n        nameRegExp,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      ),\n    number: yup\n      .string()\n      .required('\"Number\" is a required field')\n      .matches(\n        phoneNumberRegExp,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      ),\n  });\n\n  const onSubmitHandler = (\n    value: { name: string; number: string },\n    { resetForm }: { resetForm: any }\n  ) => {\n    const normalizedName = value.name.toLowerCase();\n\n    contacts?.find(({ name }) => name.toLowerCase().includes(normalizedName))\n      ? alert(`${value.name} is already in contacts.`)\n      : dispatch(addContact({ ...value }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={validationSchema}\n      onSubmit={onSubmitHandler}\n    >\n      <StyledForm>\n        <InputGroup name={'name'} type={'text'} autoComplete={false} />\n        <InputGroup name={'number'} type={'tel'} autoComplete={false} />\n\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import { Box, styled, TextField } from '@mui/material';\n\nexport const Form = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n  max-width: 600px;\n`;\n\nexport const Input = styled(TextField)`\n  outline: true;\n  font-size: 16px;\n  /* padding: ${p => p.theme.spacing(2)}; */\n  border-radius: ${p => p.theme.spacing(2)};\n  width: 200px;\n  background-color: ${p => p.theme.palette.background.default};\n` as typeof TextField;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport {\n  selectContactsFilter,\n  selectContactsIsLoading,\n} from 'redux/contacts/contactsSelectors';\n\nimport { Form, Input } from './Filter.styled';\nimport { useEffect } from 'react';\n\nconst Filter: React.FC = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectContactsFilter);\n  const isContactsLoading = useSelector(selectContactsIsLoading);\n\n  const onChangeHandle = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=> {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  useEffect(() => {\n    if (isContactsLoading) {\n      dispatch(setFilter(''));\n    }\n  }, [dispatch, isContactsLoading]);\n\n  return (\n    <Form as=\"form\" onSubmit={e => e.preventDefault()}>\n      <label htmlFor=\"contactsFilter\">Find contacts by name </label>\n\n      <Input\n        id=\"contactsFilter\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChangeHandle}\n        autoComplete=\"off\"\n        color=\"secondary\"\n        size=\"small\"\n      />\n    </Form>\n  );\n};\n\nexport default Filter;\n","import { Paper, Typography, styled } from '@mui/material';\n\nexport const StyledPaper = styled(Paper)`\n  background-color: ${p=>p.theme.palette.background.default};\n  padding: ${p=>p.theme.spacing(4)};\n  text-indent: ${p=>p.theme.spacing(4)};\n  font-style: italic ;\n  border-radius: ${p=>p.theme.spacing(3)};\n  max-width: 245px;\n`;\n\nexport const StyledParagraph = styled(Typography)``;\n","import { useEffect, useState } from 'react';\n\nimport { StyledPaper, StyledParagraph } from './FromAuthor.styled';\n\nimport content from './data.json';\n\nconst FromAuthor: React.FC = () => {\n  const [currentInd, setCurrentInd] = useState(\n    () => Math.floor(Math.random() * -9) + 10\n  );\n\n  useEffect(() => {\n    const getRandomInd = (min: number, max: number) => {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    const intervalId = setInterval(() => {\n      const newInd = getRandomInd(0, content.length - 1);\n      setCurrentInd(newInd);\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <StyledPaper elevation={0}>\n      <StyledParagraph paragraph variant=\"body1\">\n        \"{content[currentInd].text}\"\n      </StyledParagraph>\n      <StyledParagraph paragraph variant=\"body1\">\n        {content[currentInd].author}\n      </StyledParagraph>\n    </StyledPaper>\n  );\n};\n\nexport default FromAuthor;\n","import { Box, styled } from '@mui/material';\n\nexport const StyledSideBar = styled(Box)`\n  position: relative;\n  width: 260px;\n  box-shadow: 26px -2px 10px -30px rgba(0, 0, 0, 0.66);\n  min-height: 88vh;\n`;\n\nexport const StyledSidebarThumb = styled(Box)`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const StyledContentWrap = styled(Box)`\n  padding: ${p => p.theme.spacing(4)};\n  flex-grow: 1;\n`;\n","import { Box, LinearProgress, Typography } from '@mui/material';\nimport { Outlet } from 'react-router';\nimport { Suspense, useEffect } from 'react';\n\nimport ContactForm from 'components/ContactForm';\n\nimport Filter from 'components/Filter';\nimport FromAuthor from 'components/FromAuthor';\n\nimport useAuth from 'hooks/useAuth';\nimport { useAppDispatch } from 'hooks/hooksConfig';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nimport {\n  StyledSideBar,\n  StyledSidebarThumb,\n  StyledContentWrap,\n} from './ContactsPage.styled';\n\nconst ContactsPage: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { isLogIn } = useAuth();\n\n  useEffect(() => {\n    if (isLogIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLogIn]);\n\n  return (\n    <Box display=\"flex\">\n      <StyledSideBar as=\"aside\">\n        <StyledSidebarThumb>\n          <Typography component=\"h1\" variant=\"h5\" my={0}>\n            My PhoneBook\n          </Typography>\n\n          <ContactForm />\n          <Filter />\n          <FromAuthor />\n        </StyledSidebarThumb>\n      </StyledSideBar>\n\n      <StyledContentWrap>\n        <Suspense fallback={<LinearProgress color=\"secondary\" />}>\n          <Outlet />\n        </Suspense>\n      </StyledContentWrap>\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n","import { styled } from '@mui/material';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Input = styled(Field)`\n  border: 1px solid #6f4e37;\n  padding: ${p=>p.theme.spacing(2)};\n  border-radius: ${p=>p.theme.spacing(2)};\n  margin-bottom: ${p=>p.theme.spacing(2)};\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\ncolor: red;\n`;","import { nanoid } from 'nanoid';\nimport {Input, StyledErrorMessage } from './InputGroup.styled';\n\nconst InputGroup = ({\n    name,\n    type,\n    autoComplete,\n  }: {\n    name: string;\n    type: string;\n    autoComplete: boolean;\n  }) => {\n    const inputId = nanoid();\n    return (\n      <>\n        <label htmlFor={inputId}>{name ? name[0].toUpperCase() + name.slice(1) : ''}</label>\n        <Input\n          id={inputId}\n          type={type}\n          name={name}\n          autoComplete={autoComplete ? 'on' : 'off'}\n        />\n        <StyledErrorMessage name={name} component=\"div\" />\n      </>\n    );\n  };\n  \n  export default InputGroup;","import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from 'redux/store';\n\nexport const selectContacts = (state: RootState) => state.contacts.items;\n\nexport const selectContactsIsLoading = (state: RootState) => state.contacts.isLoading;\n\nexport const selectContactsFilter = (state: RootState) => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectContactsFilter], (contacts, contactsFilter) => {\n        const filteredContacts = contacts?.filter(({ name }) =>\n            name.toLowerCase().includes(contactsFilter.toLowerCase())\n        );\n\n        return filteredContacts;\n    }\n);"],"names":["StyledForm","styled","Form","p","theme","spacing","palette","background","default","StyledButton","Button","primary","main","text","secondary","common","white","dispatch","useAppDispatch","contacts","useSelector","selectContacts","validationSchema","yup","shape","name","required","matches","number","initialValues","onSubmit","value","resetForm","normalizedName","toLowerCase","find","includes","alert","addContact","InputGroup","type","autoComplete","Box","Input","TextField","useDispatch","selectContactsFilter","isContactsLoading","selectContactsIsLoading","useEffect","setFilter","as","e","preventDefault","htmlFor","id","onChange","currentTarget","color","size","StyledPaper","Paper","StyledParagraph","Typography","useState","Math","floor","random","currentInd","setCurrentInd","intervalId","setInterval","min","max","newInd","content","clearInterval","elevation","paragraph","variant","author","StyledSideBar","StyledSidebarThumb","StyledContentWrap","isLogIn","useAuth","fetchContacts","display","component","my","Suspense","fallback","LinearProgress","Field","StyledErrorMessage","ErrorMessage","inputId","nanoid","toUpperCase","slice","state","items","isLoading","filter","selectFilteredContacts","createSelector","contactsFilter"],"sourceRoot":""}